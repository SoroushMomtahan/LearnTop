// <auto-generated />
using System;
using LearnTop.Modules.Categories.Infrastructure.Data.WriteDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearnTop.Modules.Categories.Infrastructure.Data.WriteDb.Migrations
{
    [DbContext(typeof(CategoriesDbContext))]
    [Migration("20250423163807_AddOrderToCategories")]
    partial class AddOrderToCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Categories")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LearnTop.Modules.Categories.Domain.Categories.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DarkImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LightImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories", "Categories");
                });

            modelBuilder.Entity("LearnTop.Modules.Categories.Domain.Categories.Models.CategoryRelation", b =>
                {
                    b.Property<Guid>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChildCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ParentCategoryId", "ChildCategoryId");

                    b.HasIndex("ChildCategoryId");

                    b.ToTable("CategoryRelation", "Categories");
                });

            modelBuilder.Entity("LearnTop.Modules.Categories.Domain.Categories.Models.CategoryRelation", b =>
                {
                    b.HasOne("LearnTop.Modules.Categories.Domain.Categories.Models.Category", "ChildCategory")
                        .WithMany("ParentCategories")
                        .HasForeignKey("ChildCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LearnTop.Modules.Categories.Domain.Categories.Models.Category", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChildCategory");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("LearnTop.Modules.Categories.Domain.Categories.Models.Category", b =>
                {
                    b.Navigation("ChildCategories");

                    b.Navigation("ParentCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
