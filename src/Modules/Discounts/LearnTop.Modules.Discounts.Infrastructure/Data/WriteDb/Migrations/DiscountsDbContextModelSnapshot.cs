// <auto-generated />
using System;
using LearnTop.Modules.Discounts.Infrastructure.Data.WriteDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearnTop.Modules.Discounts.Infrastructure.Data.WriteDb.Migrations
{
    [DbContext(typeof(DiscountsDbContext))]
    partial class DiscountsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Discounts")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LearnTop.Modules.Discounts.Domain.Discounts.Models.CourseDiscount", b =>
                {
                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DiscountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseId", "DiscountId");

                    b.HasIndex("DiscountId");

                    b.ToTable("CourseDiscount", "Discounts");
                });

            modelBuilder.Entity("LearnTop.Modules.Discounts.Domain.Discounts.Models.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ForAllUsers")
                        .HasColumnType("bit");

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Discounts", "Discounts");
                });

            modelBuilder.Entity("LearnTop.Modules.Discounts.Domain.Discounts.Models.UserDiscount", b =>
                {
                    b.Property<Guid>("DiscountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DiscountId", "UserId");

                    b.ToTable("UserDiscount", "Discounts");
                });

            modelBuilder.Entity("LearnTop.Modules.Discounts.Domain.Discounts.Models.CourseDiscount", b =>
                {
                    b.HasOne("LearnTop.Modules.Discounts.Domain.Discounts.Models.Discount", null)
                        .WithMany("CourseDiscounts")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LearnTop.Modules.Discounts.Domain.Discounts.Models.UserDiscount", b =>
                {
                    b.HasOne("LearnTop.Modules.Discounts.Domain.Discounts.Models.Discount", null)
                        .WithMany("UserDiscounts")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LearnTop.Modules.Discounts.Domain.Discounts.Models.Discount", b =>
                {
                    b.Navigation("CourseDiscounts");

                    b.Navigation("UserDiscounts");
                });
#pragma warning restore 612, 618
        }
    }
}
