// <auto-generated />
using System;
using LearnTop.Modules.Ordering.Infrastructure.Data.WriteDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearnTop.Modules.Ordering.Infrastructure.Data.WriteDb.Migrations
{
    [DbContext(typeof(OrderingDbContext))]
    [Migration("20250223090649_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Ordering")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Coupons.Models.Coupon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Ceil")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("Floor")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Coupons", "Ordering");
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Coupons.Models.CouponyCategory", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoryId", "CouponId");

                    b.HasIndex("CouponId");

                    b.ToTable("CouponyCategory", "Ordering");
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Coupons.Models.CouponyProduct", b =>
                {
                    b.Property<Guid>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CouponId", "ProductId");

                    b.ToTable("CouponyProduct", "Ordering");
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Coupons.Models.CouponyUser", b =>
                {
                    b.Property<Guid>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CouponId", "UserId");

                    b.ToTable("CouponyUser", "Ordering");
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Discounts.Models.CustomerDiscount", b =>
                {
                    b.Property<Guid>("DiscountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DiscountId", "CustomerId");

                    b.ToTable("CustomerDiscount", "Ordering");
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Discounts.Models.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Discounts", "Ordering");
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Discounts.Models.ProductDiscount", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DiscountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId", "DiscountId");

                    b.HasIndex("DiscountId");

                    b.ToTable("ProductDiscount", "Ordering");
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Orders.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CouponPercent")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<long>("TotalPrice")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders", "Ordering");
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Orders.Models.OrderItem", b =>
                {
                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PercentDiscount")
                        .HasColumnType("int");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem", "Ordering");
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Products.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.ToTable("Products", "Ordering");
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Coupons.Models.CouponyCategory", b =>
                {
                    b.HasOne("LearnTop.Modules.Ordering.Domain.Coupons.Models.Coupon", null)
                        .WithMany("Categories")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Coupons.Models.CouponyProduct", b =>
                {
                    b.HasOne("LearnTop.Modules.Ordering.Domain.Coupons.Models.Coupon", null)
                        .WithMany("Products")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Coupons.Models.CouponyUser", b =>
                {
                    b.HasOne("LearnTop.Modules.Ordering.Domain.Coupons.Models.Coupon", null)
                        .WithMany("Users")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Discounts.Models.CustomerDiscount", b =>
                {
                    b.HasOne("LearnTop.Modules.Ordering.Domain.Discounts.Models.Discount", null)
                        .WithMany("CustomerDiscounts")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Discounts.Models.ProductDiscount", b =>
                {
                    b.HasOne("LearnTop.Modules.Ordering.Domain.Discounts.Models.Discount", null)
                        .WithMany("ProductDiscounts")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Orders.Models.OrderItem", b =>
                {
                    b.HasOne("LearnTop.Modules.Ordering.Domain.Orders.Models.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Coupons.Models.Coupon", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Products");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Discounts.Models.Discount", b =>
                {
                    b.Navigation("CustomerDiscounts");

                    b.Navigation("ProductDiscounts");
                });

            modelBuilder.Entity("LearnTop.Modules.Ordering.Domain.Orders.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
